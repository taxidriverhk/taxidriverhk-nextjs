import { useMemo } from "react";
import { Accordion, Alert, Button, Form } from "react-bootstrap";
import ImportCSVButton from "./ImportCsvButton";

type PropType = {
  apiKey: string;
  onAddHolding: () => void;
  onApiKeyChange: (key: string) => void;
  onImportError: (error: string) => void;
  onImportHoldings: (holdings: Array<any>) => void;
};

export default function PortfolioHeader({
  apiKey,
  onAddHolding,
  onApiKeyChange,
  onImportError,
  onImportHoldings,
}: PropType) {
  const isAddHoldingButtonDisabled = useMemo(() => !apiKey, [apiKey]);

  return (
    <div
      style={{
        display: "flex",
        flexDirection: "column",
        gap: "10px",
      }}
    >
      <Accordion as={Alert} defaultActiveKey="0" variant="info">
        <Accordion.Item eventKey="0">
          <Accordion.Header>About this tool</Accordion.Header>
          <Accordion.Body>
            <ul>
              <li>
                This tool helps you manage your dividend portfolio by fetching
                real-time data from the Alpha Vantage API, and using the data to
                estimate your annual income and yield.
              </li>
              <li>
                This page is mostly generated by ChatGPT, with some manual fine
                tunes.
              </li>
              <li>
                Enter your Alpha Vantage API key below before providing your
                input.
                <ul>
                  <li>
                    Go to{" "}
                    <a
                      href="https://www.alphavantage.co/support/#api-key"
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      https://www.alphavantage.co/support/#api-key
                    </a>{" "}
                    to obtain a free API key.
                  </li>
                  <li>
                    However, they limit to 25 requests per day, so please plan
                    your usage accordingly or get a premium access.
                  </li>
                </ul>
              </li>
              <li>
                If you want to import a CSV,{" "}
                <strong>make sure it follows the correct format</strong>:
                <ul>
                  <li>
                    Column headers must include:{" "}
                    <code>Symbol, Number of Shares, Cost Basis, Category</code>
                  </li>
                  <li>
                    You could start with{" "}
                    <a href="/passive-income/test-import-file.csv">
                      this sample file
                    </a>
                    .
                  </li>
                </ul>
              </li>
              <li>
                The data is yours to keep, this website does not keep any
                records of your API key nor the data you have retrieved or
                provided.
                <ul>
                  <li>
                    Alpha Vantage is the only API call this website makes to
                    fetch the security data. All other things are done on the
                    client side.
                  </li>
                </ul>
              </li>
              <li>
                If you want to keep the data for future use, please use the
                <code>Export (under development)</code> function before leaving
                the page.
              </li>
            </ul>
          </Accordion.Body>
        </Accordion.Item>
      </Accordion>
      <div
        style={{
          display: "flex",
          flexDirection: "row",
          justifyContent: "end",
          gap: "8px",
        }}
      >
        <Form.Group className="mb-3" style={{ width: "500px" }}>
          <Form.Control
            type="type"
            placeholder="Alpha Vantage API key"
            value={apiKey}
            onChange={(e) => onApiKeyChange(e.target.value)}
          />
        </Form.Group>
        <Button
          disabled={isAddHoldingButtonDisabled}
          onClick={onAddHolding}
          className="mb-3"
        >
          + Add Holding
        </Button>
        <ImportCSVButton
          isDisabled={isAddHoldingButtonDisabled}
          onConfirm={onImportHoldings}
          onError={onImportError}
        />
      </div>
    </div>
  );
}
